{
  "openapi": "3.0.0",
  "info": {
    "title": "Sustentabag API",
    "version": "1.0.0",
    "description": "API completa para gerenciamento de sacolas misteriosas do sistema Sustenta Bag",
    "contact": {
      "name": "Equipe Sustenta Bag",
      "url": "https://github.com/Sustenta-Bag",
      "email": "contato@sustentabag.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "Servidor de API"
    }
  ],
  "tags": [
    {
      "name": "Base",
      "description": "General API routes"
    },
    {
      "name": "Location",
      "description": "Operações relacionadas a localização geográfica"
    }
  ],
  "paths": {
    "/api/addresses": {
      "post": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zipCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/addresses/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/addresses/{id}/status": {
      "patch": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/UpdateStatus"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/UpdateStatus"
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registrar um novo usuário",
        "description": "Registra um novo usuário (cliente ou empresa) no sistema",
        "responses": {
          "201": {
            "description": "Created"
          },
          "402": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "Cliente": {
                  "value": {
                    "entityType": "client",
                    "userData": {
                      "email": "usuario@example.com",
                      "password": "senha123"
                    },
                    "entityData": {
                      "name": "Maria Silva Oliveira",
                      "cpf": "12345678909",
                      "phone": "11987654321",
                      "idAddress": {
                        "zipCode": "85937000",
                        "state": "PR",
                        "city": "Assis Chateaubriand",
                        "street": "Avenida Paraná",
                        "number": "72",
                        "complement": "None"
                      },
                      "status": 1
                    }
                  }
                },
                "Empresa": {
                  "value": {
                    "entityType": "business",
                    "userData": {
                      "email": "empresa@example.com",
                      "password": "senha123"
                    },
                    "entityData": {
                      "legalName": "Sustenta Bag LTDA",
                      "cnpj": "12345678000195",
                      "appName": "Sustenta Bag - Centro",
                      "cellphone": "11987654321",
                      "description": "Empresa especializada em sacolas sustentáveis",
                      "delivery": true,
                      "deliveryTax": 5.99,
                      "idAddress": {
                        "zipCode": "85937000",
                        "state": "PR",
                        "city": "Assis Chateaubriand",
                        "street": "Avenida Paraná",
                        "number": "72",
                        "complement": "None"
                      },
                      "status": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Autenticar usuário",
        "description": "Realiza login de um usuário com email e senha",
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLoginOk"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginRequest"
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Alterar senha",
        "description": "Altera a senha do usuário autenticado",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Senha alterada com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthChangePasswordRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthChangePasswordRequest"
              }
            }
          }
        }
      }
    },
    "/api/auth/device-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registrar token do dispositivo",
        "description": "Registra o token FCM do dispositivo para receber notificações",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Token registrado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceToken"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeviceToken"
              }
            }
          }
        }
      }
    },
    "/api/auth/user/{userId}/fcm-token": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Recuperar token FCM do usuário",
        "description": "Recupera o token FCM associado a um usuário específico",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token FCM recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "fcm-token-example",
                      "description": "Token FCM do usuário ou null se não encontrado"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID do usuário inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/bags": {
      "post": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/{id}": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Bag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Bag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Bag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/business/{idBusiness}": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "idBusiness",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/business/{idBusiness}/active": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "idBusiness",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/{id}/status": {
      "patch": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "0 for inactive, 1 for active"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        }
      }
    },
    "/api/bags/tags": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "Retorna a lista de tags permitidas para sacolas",
        "responses": {
          "200": {
            "description": "Lista de tags permitidas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "example": {
                      "type": "array",
                      "example": [
                        "PODE_CONTER_GLUTEN",
                        "PODE_CONTER_LACTOSE"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "example": {
                      "type": "array",
                      "example": [
                        "PODE_CONTER_GLUTEN",
                        "PODE_CONTER_LACTOSE"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/businesses": {
      "post": {
        "tags": [
          "Business"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "legalName": {
                    "type": "string",
                    "example": "Sustenta Bag LTDA"
                  },
                  "cnpj": {
                    "type": "string",
                    "example": "12345678000195"
                  },
                  "appName": {
                    "type": "string",
                    "example": "Sustenta Bag - Centro"
                  },
                  "cellphone": {
                    "type": "string",
                    "example": "11987654321"
                  },
                  "description": {
                    "type": "string",
                    "example": "Empresa especializada em sacolas"
                  },
                  "openingHours": {
                    "type": "string",
                    "example": "08:00-18:00"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha123"
                  },
                  "delivery": {
                    "type": "boolean",
                    "example": true
                  },
                  "deliveryTax": {
                    "type": "number",
                    "example": 5.99
                  },
                  "develiveryTime": {
                    "type": "integer",
                    "example": 30
                  },
                  "idAddress": {
                    "type": "integer",
                    "example": 1
                  },
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "legalName",
                  "cnpj",
                  "appName",
                  "cellphone",
                  "password"
                ]
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyActive",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/businesses/active": {
      "get": {
        "tags": [
          "Business"
        ],
        "description": "Retorna apenas empresas ativas (status=1)",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/businesses/{id}": {
      "get": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID da empresa"
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Empresa não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/BusinessInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/BusinessInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/businesses/{id}/status": {
      "patch": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/clients": {
      "post": {
        "tags": [
          "Client"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/clients/active": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "Retorna apenas clientes ativos (status=1)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/clients/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/clients/{id}/status": {
      "patch": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/favorites": {
      "get": {
        "tags": [
          "Favorites"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idClient",
            "in": "query",
            "description": "ID of the client to filter favorites",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Favorites"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Favorite"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Favorite"
              }
            }
          }
        }
      }
    },
    "/api/favorites/{id}": {
      "delete": {
        "tags": [
          "Favorites"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the favorite to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "example": 1
                  },
                  "businessId": {
                    "type": "integer",
                    "example": 1
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bagId": {
                          "type": "integer",
                          "example": 1
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "example": 1
                  },
                  "businessId": {
                    "type": "integer",
                    "example": 1
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bagId": {
                          "type": "integer",
                          "example": 1
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/user/{userId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/business/{businessId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/{id}/status": {
      "patch": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "confirmed",
                      "preparing",
                      "ready",
                      "delivered",
                      "cancelled"
                    ],
                    "example": "confirmed"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "confirmed",
                      "preparing",
                      "ready",
                      "delivered",
                      "cancelled"
                    ],
                    "example": "confirmed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}/items": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bagId": {
                    "type": "integer",
                    "example": 1
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "bagId": {
                    "type": "integer",
                    "example": 1
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderId}/items/{itemId}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Order or item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/{orderId}/items/{itemId}/quantity": {
      "patch": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Order or item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}/cancel": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/history/user/{userId}": {
      "get": {
        "tags": [
          "Order History"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by order status",
            "required": false,
            "enum": [
              "pendente",
              "confirmado",
              "preparando",
              "pronto",
              "entregue",
              "cancelado"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter from date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter to date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of orders per page",
            "required": false,
            "default": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of orders to skip",
            "required": false,
            "default": 0,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User order history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "orders": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "array"
                            },
                            "items": {
                              "$ref": "#/components/schemas/Order"
                            }
                          }
                        },
                        "total": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "hasMore": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "orders": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "array"
                            },
                            "items": {
                              "$ref": "#/components/schemas/Order"
                            }
                          }
                        },
                        "total": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "hasMore": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/history/business/{businessId}": {
      "get": {
        "tags": [
          "Order History"
        ],
        "description": "",
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Business ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business order history retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/stats/user/{userId}": {
      "get": {
        "tags": [
          "Order Statistics"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User order statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "byStatus": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        },
                        "totalAmount": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number"
                            }
                          }
                        },
                        "lastOrderDate": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "byStatus": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        },
                        "totalAmount": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number"
                            }
                          }
                        },
                        "lastOrderDate": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/stats/business/{businessId}": {
      "get": {
        "tags": [
          "Order Statistics"
        ],
        "description": "",
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business order statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "byStatus": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        },
                        "totalRevenue": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number"
                            }
                          }
                        },
                        "lastOrderDate": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "integer"
                            }
                          }
                        },
                        "byStatus": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        },
                        "totalRevenue": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "number"
                            }
                          }
                        },
                        "lastOrderDate": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/status/{status}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order status",
            "enum": [
              "pendente",
              "confirmado",
              "preparando",
              "pronto",
              "entregue",
              "cancelado"
            ]
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders filtered by status retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/orders/date-range": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders filtered by date range retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idClient",
            "in": "query",
            "description": "ID of the client to filter reviews",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idBusiness",
            "in": "query",
            "description": "ID of the business to filter reviews",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        }
      }
    },
    "/api/reviews/{id}": {
      "delete": {
        "tags": [
          "Reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the review to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "NearbyBusinessesResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 3
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Example Business"
                },
                "legalName": {
                  "type": "string",
                  "example": "Example Business Ltd."
                },
                "logo": {
                  "type": "string",
                  "example": "/uploads/logos/example.png"
                },
                "distance": {
                  "type": "number",
                  "example": 2.34
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Main Street"
                    },
                    "number": {
                      "type": "string",
                      "example": "123"
                    },
                    "city": {
                      "type": "string",
                      "example": "Example City"
                    },
                    "state": {
                      "type": "string",
                      "example": "EX"
                    },
                    "zipCode": {
                      "type": "string",
                      "example": "12345678"
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "NearbyBusinessesResponse"
        }
      },
      "AuthLoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@example.com"
          },
          "password": {
            "type": "string",
            "example": "senha123"
          }
        },
        "xml": {
          "name": "AuthLoginRequest"
        }
      },
      "AuthChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "senha123"
          },
          "newPassword": {
            "type": "string",
            "example": "novaSenha456"
          }
        },
        "xml": {
          "name": "AuthChangePasswordRequest"
        }
      },
      "AuthLoginOk": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          },
                          "example": {
                            "type": "number",
                            "example": 1
                          }
                        }
                      },
                      "email": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "example": {
                            "type": "string",
                            "example": "usuario@example.com"
                          }
                        }
                      },
                      "role": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "example": {
                            "type": "string",
                            "example": "client"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "entity": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "description": {
                    "type": "string",
                    "example": "Dados da entidade (cliente ou empresa)"
                  }
                }
              },
              "token": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "JWT para autenticação em rotas protegidas"
                  },
                  "example": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "AuthLoginOk"
        }
      },
      "DeviceToken": {
        "type": "object",
        "properties": {
          "deviceToken": {
            "type": "string",
            "example": "cSM76L5hQJKZZhXs-DsmFA:APA91bHgT1uQ..."
          }
        },
        "xml": {
          "name": "DeviceToken"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "usuario@example.com"
          },
          "role": {
            "type": "string",
            "example": "client"
          },
          "entityId": {
            "type": "number",
            "example": 2
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "firebaseId": {
            "type": "string",
            "example": "firebase123"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Bag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "type": {
            "type": "string",
            "example": "Doce"
          },
          "price": {
            "type": "number",
            "example": 10.99
          },
          "description": {
            "type": "string",
            "example": "Sacola com diversos doces e sobremesas"
          },
          "idBusiness": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Bag"
        }
      },
      "BagInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Doce"
          },
          "price": {
            "type": "number",
            "example": 10.99
          },
          "description": {
            "type": "string",
            "example": "Sacola com diversos doces e sobremesas"
          },
          "idBusiness": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "BagInput"
        }
      },
      "StatusUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "StatusUpdate"
        }
      },
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "legalName": {
            "type": "string",
            "example": "Sustenta Bag LTDA"
          },
          "cnpj": {
            "type": "string",
            "example": "12345678000195"
          },
          "appName": {
            "type": "string",
            "example": "Sustenta Bag - Centro"
          },
          "cellphone": {
            "type": "string",
            "example": "11987654321"
          },
          "description": {
            "type": "string",
            "example": "Empresa especializada em sacolas ecológicas"
          },
          "logo": {
            "type": "string",
            "example": "uploads/logos/logo123.png"
          },
          "delivery": {
            "type": "boolean",
            "example": true
          },
          "deliveryTax": {
            "type": "number",
            "example": 5.99
          },
          "idAddress": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Business"
        }
      },
      "BusinessInput": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "example": "Sustenta Bag LTDA"
          },
          "cnpj": {
            "type": "string",
            "example": "12345678000195"
          },
          "appName": {
            "type": "string",
            "example": "Sustenta Bag - Centro"
          },
          "cellphone": {
            "type": "string",
            "example": "11987654321"
          },
          "description": {
            "type": "string",
            "example": "Empresa especializada em sacolas"
          },
          "delivery": {
            "type": "boolean",
            "example": true
          },
          "deliveryTax": {
            "type": "number",
            "example": 5.99
          },
          "develiveryTime": {
            "type": "number",
            "example": 30
          },
          "openingHours": {
            "type": "string",
            "example": "08:00-18:00"
          },
          "idAddress": {
            "type": "number",
            "example": 1
          },
          "logo": {
            "type": "string",
            "example": "file_binary_data"
          }
        },
        "xml": {
          "name": "BusinessInput"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "zipCode": {
            "type": "string",
            "example": "12345678"
          },
          "state": {
            "type": "string",
            "example": "PR"
          },
          "city": {
            "type": "string",
            "example": "Curitiba"
          },
          "street": {
            "type": "string",
            "example": "Rua das Flores"
          },
          "number": {
            "type": "string",
            "example": "123"
          },
          "complement": {
            "type": "string",
            "example": "Apto 45"
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Address"
        }
      },
      "AddressInput": {
        "type": "object",
        "properties": {
          "zipCode": {
            "type": "string",
            "example": "12345678"
          },
          "state": {
            "type": "string",
            "example": "PR"
          },
          "city": {
            "type": "string",
            "example": "Curitiba"
          },
          "street": {
            "type": "string",
            "example": "Rua das Flores"
          },
          "number": {
            "type": "string",
            "example": "123"
          },
          "complement": {
            "type": "string",
            "example": "Apto 45"
          }
        },
        "xml": {
          "name": "AddressInput"
        }
      },
      "UpdateStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "UpdateStatus"
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "example": "joao.silva@email.com"
          },
          "cpf": {
            "type": "string",
            "example": "12345678901"
          },
          "phone": {
            "type": "string",
            "example": "11987654321"
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Client"
        }
      },
      "ClientInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Gabriel da Silva Costa"
          },
          "email": {
            "type": "string",
            "example": "silva@gabriel.com"
          },
          "cpf": {
            "type": "string",
            "example": "12345678901"
          },
          "phone": {
            "type": "string",
            "example": "11987654321"
          }
        },
        "xml": {
          "name": "ClientInput"
        }
      },
      "ClientLoginRequest": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string",
            "example": "12345678901"
          },
          "password": {
            "type": "string",
            "example": "senha123"
          }
        },
        "xml": {
          "name": "ClientLoginRequest"
        }
      },
      "Favorite": {
        "type": "object",
        "properties": {
          "idBusiness": {
            "type": "number",
            "example": 1
          },
          "idClient": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "Favorite"
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "idOrder": {
            "type": "number",
            "example": 1
          },
          "idClient": {
            "type": "number",
            "example": 1
          },
          "rating": {
            "type": "number",
            "example": 5
          },
          "comment": {
            "type": "string",
            "example": "Excelente sacola, muito bem feita!"
          }
        },
        "xml": {
          "name": "Review"
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "email": {
                "type": "string",
                "example": "usuario@example.com"
              },
              "role": {
                "type": "string",
                "example": "client"
              },
              "entityId": {
                "type": "number",
                "example": 2
              },
              "firebaseId": {
                "type": "string",
                "example": "firebase123"
              }
            }
          },
          "entity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 2
              },
              "name": {
                "type": "string",
                "example": "João Silva"
              },
              "cpf": {
                "type": "string",
                "example": "12345678901"
              }
            }
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "xml": {
          "name": "AuthResponse"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "errorCode": {
            "type": "string",
            "example": "BAG_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "example": "Sacola não encontrada com o ID fornecido"
          },
          "timestamp": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Error"
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "errorCode": {
            "type": "string",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "example": "Erro de validação dos dados de entrada"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "type"
                },
                "message": {
                  "type": "string",
                  "example": "Tipo da sacola deve ser Doce, Salgada ou Mista"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "ValidationError"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Insira o token JWT com o prefixo Bearer. Exemplo: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\""
      }
    }
  }
}