{
  "openapi": "3.0.0",
  "info": {
    "title": "Sustentabag API",
    "version": "1.0.0",
    "description": "API completa para gerenciamento de sacolas misteriosas do sistema Sustenta Bag",
    "contact": {
      "name": "Equipe Sustenta Bag",
      "url": "https://github.com/Sustenta-Bag",
      "email": "contato@sustentabag.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "Servidor de API"
    }
  ],
  "tags": [
    {
      "name": "Location",
      "description": "Operações relacionadas a localização geográfica"
    }
  ],
  "paths": {
    "/api/addresses": {
      "post": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/addresses/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/AddressInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registrar um novo usuário",
        "description": "Registra um novo usuário (cliente ou empresa) no sistema",
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "firebaseId": {
                          "type": "string"
                        }
                      }
                    },
                    "entity": {
                      "type": "object",
                      "description": "Dados da entidade criada (cliente ou empresa)"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "client",
                      "business"
                    ],
                    "example": "client"
                  },
                  "userData": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "usuario@example.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "senha123"
                      }
                    },
                    "required": [
                      "email",
                      "password"
                    ]
                  },
                  "entityData": {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "Cliente",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Maria Silva Oliveira"
                          },
                          "cpf": {
                            "type": "string",
                            "example": "12345678909"
                          },
                          "phone": {
                            "type": "string",
                            "example": "11987654321"
                          },
                          "idAddress": {
                            "type": "object",
                            "properties": {
                              "zipCode": {
                                "type": "string",
                                "example": "85937000"
                              },
                              "state": {
                                "type": "string",
                                "example": "PR"
                              },
                              "city": {
                                "type": "string",
                                "example": "Assis Chateaubriand"
                              },
                              "street": {
                                "type": "string",
                                "example": "Avenida Paraná"
                              },
                              "number": {
                                "type": "string",
                                "example": "72"
                              },
                              "complement": {
                                "type": "string",
                                "example": "None"
                              }
                            },
                            "required": [
                              "zipCode",
                              "state",
                              "city",
                              "street",
                              "number"
                            ]
                          },
                          "status": {
                            "type": "integer",
                            "example": 1
                          }
                        },
                        "required": [
                          "name",
                          "cpf",
                          "idAddress"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Empresa",
                        "properties": {
                          "legalName": {
                            "type": "string",
                            "example": "Sustenta Bag LTDA"
                          },
                          "cnpj": {
                            "type": "string",
                            "example": "12345678000195"
                          },
                          "appName": {
                            "type": "string",
                            "example": "Sustenta Bag - Centro"
                          },
                          "cellphone": {
                            "type": "string",
                            "example": "11987654321"
                          },
                          "description": {
                            "type": "string",
                            "example": "Empresa especializada em sacolas sustentáveis"
                          },
                          "delivery": {
                            "type": "boolean",
                            "example": true
                          },
                          "deliveryTax": {
                            "type": "number",
                            "example": 5.99
                          },
                          "idAddress": {
                            "type": "object",
                            "properties": {
                              "zipCode": {
                                "type": "string",
                                "example": "85937000"
                              },
                              "state": {
                                "type": "string",
                                "example": "PR"
                              },
                              "city": {
                                "type": "string",
                                "example": "Assis Chateaubriand"
                              },
                              "street": {
                                "type": "string",
                                "example": "Avenida Paraná"
                              },
                              "number": {
                                "type": "string",
                                "example": "72"
                              },
                              "complement": {
                                "type": "string",
                                "example": "None"
                              }
                            },
                            "required": [
                              "zipCode",
                              "state",
                              "city",
                              "street",
                              "number"
                            ]
                          },
                          "status": {
                            "type": "integer",
                            "example": 1
                          }
                        },
                        "required": [
                          "legalName",
                          "cnpj",
                          "appName",
                          "cellphone",
                          "idAddress"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "entityType",
                  "userData",
                  "entityData"
                ]
              },
              "examples": {
                "Cliente": {
                  "value": {
                    "entityType": "client",
                    "userData": {
                      "email": "usuario@example.com",
                      "password": "senha123"
                    },
                    "entityData": {
                      "name": "Maria Silva Oliveira",
                      "cpf": "12345678909",
                      "phone": "11987654321",
                      "idAddress": {
                        "zipCode": "85937000",
                        "state": "PR",
                        "city": "Assis Chateaubriand",
                        "street": "Avenida Paraná",
                        "number": "72",
                        "complement": "None"
                      },
                      "status": 1
                    }
                  }
                },
                "Empresa": {
                  "value": {
                    "entityType": "business",
                    "userData": {
                      "email": "empresa@example.com",
                      "password": "senha123"
                    },
                    "entityData": {
                      "legalName": "Sustenta Bag LTDA",
                      "cnpj": "12345678000195",
                      "appName": "Sustenta Bag - Centro",
                      "cellphone": "11987654321",
                      "description": "Empresa especializada em sacolas sustentáveis",
                      "delivery": true,
                      "deliveryTax": 5.99,
                      "idAddress": {
                        "zipCode": "85937000",
                        "state": "PR",
                        "city": "Assis Chateaubriand",
                        "street": "Avenida Paraná",
                        "number": "72",
                        "complement": "None"
                      },
                      "status": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Autenticar usuário",
        "description": "Realiza login de um usuário com email e senha",
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    },
                    "entity": {
                      "type": "object",
                      "description": "Dados da entidade (cliente ou empresa)"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT para autenticação em rotas protegidas"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "usuario@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Alterar senha",
        "description": "Altera a senha do usuário autenticado",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Senha alterada com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "example": "senha123"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "novaSenha456"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ]
              }
            }
          }
        }
      }
    },
    "/api/auth/device-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registrar token do dispositivo",
        "description": "Registra o token FCM do dispositivo para receber notificações",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Token registrado com sucesso"
          },
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceToken": {
                    "type": "string",
                    "example": "cSM76L5hQJKZZhXs-DsmFA:APA91bHgT1uQ..."
                  }
                },
                "required": [
                  "deviceToken"
                ]
              }
            }
          }
        }
      }
    },
    "/api/bags": {
      "post": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/{id}": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Bag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Bag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/BagInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Bag not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/business/{idBusiness}": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "idBusiness",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/business/{idBusiness}/active": {
      "get": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "idBusiness",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/bags/{id}/status": {
      "patch": {
        "tags": [
          "Bag"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "0 for inactive, 1 for active"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        }
      }
    },
    "/api/businesses": {
      "post": {
        "tags": [
          "Business"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "legalName": {
                    "type": "string",
                    "example": "Sustenta Bag LTDA"
                  },
                  "cnpj": {
                    "type": "string",
                    "example": "12345678000195"
                  },
                  "appName": {
                    "type": "string",
                    "example": "Sustenta Bag - Centro"
                  },
                  "cellphone": {
                    "type": "string",
                    "example": "11987654321"
                  },
                  "description": {
                    "type": "string",
                    "example": "Empresa especializada em sacolas"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha123"
                  },
                  "delivery": {
                    "type": "boolean",
                    "example": true
                  },
                  "deliveryTax": {
                    "type": "number",
                    "example": 5.99
                  },
                  "idAddress": {
                    "type": "integer",
                    "example": 1
                  },
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "legalName",
                  "cnpj",
                  "appName",
                  "cellphone",
                  "password"
                ]
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyActive",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/businesses/active": {
      "get": {
        "tags": [
          "Business"
        ],
        "description": "Retorna apenas empresas ativas (status=1)",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/businesses/{id}": {
      "get": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID da empresa"
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Empresa não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/BusinessInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/BusinessInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/businesses/{id}/status": {
      "patch": {
        "tags": [
          "Business"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/clients": {
      "post": {
        "tags": [
          "Client"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/clients/active": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "Retorna apenas clientes ativos (status=1)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/clients/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#components/schemas/ClientInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/clients/{id}/status": {
      "patch": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/location/nearby/client": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find businesses near the logged-in client's address",
        "description": "Returns a list of nearby businesses based on the address of the authenticated client.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Search radius in kilometers",
            "required": false,
            "default": 10,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "required": false,
            "default": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of nearby businesses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "legalName": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          },
                          "distance": {
                            "type": "number"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zipCode": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client has no address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access allowed only for clients",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/location/nearby/{addressId}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find businesses near an address",
        "description": "Returns a list of nearby businesses based on an address ID",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the reference address"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Search radius in kilometers",
            "required": false,
            "default": 10,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "required": false,
            "default": 10,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of nearby businesses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of businesses found"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Business ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Business name"
                          },
                          "legalName": {
                            "type": "string",
                            "description": "Business legal name"
                          },
                          "logo": {
                            "type": "string",
                            "description": "URL to business logo"
                          },
                          "distance": {
                            "type": "number",
                            "description": "Distance in kilometers"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zipCode": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/location/geocode": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Geocode an address",
        "description": "Convert an address to geographic coordinates",
        "responses": {
          "200": {
            "description": "Successfully geocoded address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "fullAddress": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid address data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error or geocoding error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "street",
                  "number",
                  "city",
                  "state",
                  "zipCode"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NearbyBusinessesResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 3
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Example Business"
                },
                "legalName": {
                  "type": "string",
                  "example": "Example Business Ltd."
                },
                "logo": {
                  "type": "string",
                  "example": "/uploads/logos/example.png"
                },
                "distance": {
                  "type": "number",
                  "example": 2.34
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Main Street"
                    },
                    "number": {
                      "type": "string",
                      "example": "123"
                    },
                    "city": {
                      "type": "string",
                      "example": "Example City"
                    },
                    "state": {
                      "type": "string",
                      "example": "EX"
                    },
                    "zipCode": {
                      "type": "string",
                      "example": "12345678"
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "NearbyBusinessesResponse"
        }
      },
      "AuthRegisterRequest": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "example": "client"
          },
          "userData": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "usuario@example.com"
              },
              "password": {
                "type": "string",
                "example": "senha123"
              }
            }
          },
          "entityData": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Maria Silva Oliveira"
              },
              "cpf": {
                "type": "string",
                "example": "12345678909"
              },
              "phone": {
                "type": "string",
                "example": "11987654321"
              }
            }
          }
        },
        "xml": {
          "name": "AuthRegisterRequest"
        }
      },
      "AuthLoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@example.com"
          },
          "password": {
            "type": "string",
            "example": "senha123"
          }
        },
        "xml": {
          "name": "AuthLoginRequest"
        }
      },
      "AuthChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "senha123"
          },
          "newPassword": {
            "type": "string",
            "example": "novaSenha456"
          }
        },
        "xml": {
          "name": "AuthChangePasswordRequest"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "usuario@example.com"
          },
          "role": {
            "type": "string",
            "example": "client"
          },
          "entityId": {
            "type": "number",
            "example": 2
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "firebaseId": {
            "type": "string",
            "example": "firebase123"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Bag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "type": {
            "type": "string",
            "example": "Doce"
          },
          "price": {
            "type": "number",
            "example": 10.99
          },
          "description": {
            "type": "string",
            "example": "Sacola com diversos doces e sobremesas"
          },
          "idBusiness": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Bag"
        }
      },
      "BagInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Doce"
          },
          "price": {
            "type": "number",
            "example": 10.99
          },
          "description": {
            "type": "string",
            "example": "Sacola com diversos doces e sobremesas"
          },
          "idBusiness": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "BagInput"
        }
      },
      "StatusUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "StatusUpdate"
        }
      },
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "legalName": {
            "type": "string",
            "example": "Sustenta Bag LTDA"
          },
          "cnpj": {
            "type": "string",
            "example": "12345678000195"
          },
          "appName": {
            "type": "string",
            "example": "Sustenta Bag - Centro"
          },
          "cellphone": {
            "type": "string",
            "example": "11987654321"
          },
          "description": {
            "type": "string",
            "example": "Empresa especializada em sacolas ecológicas"
          },
          "logo": {
            "type": "string",
            "example": "uploads/logos/logo123.png"
          },
          "delivery": {
            "type": "boolean",
            "example": true
          },
          "deliveryTax": {
            "type": "number",
            "example": 5.99
          },
          "idAddress": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Business"
        }
      },
      "BusinessInput": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "example": "Sustenta Bag LTDA"
          },
          "cnpj": {
            "type": "string",
            "example": "12345678000195"
          },
          "appName": {
            "type": "string",
            "example": "Sustenta Bag - Centro"
          },
          "cellphone": {
            "type": "string",
            "example": "11987654321"
          },
          "description": {
            "type": "string",
            "example": "Empresa especializada em sacolas"
          },
          "delivery": {
            "type": "boolean",
            "example": true
          },
          "deliveryTax": {
            "type": "number",
            "example": 5.99
          },
          "idAddress": {
            "type": "number",
            "example": 1
          },
          "logo": {
            "type": "string",
            "example": "file_binary_data"
          }
        },
        "xml": {
          "name": "BusinessInput"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "zipCode": {
            "type": "string",
            "example": "12345678"
          },
          "state": {
            "type": "string",
            "example": "PR"
          },
          "city": {
            "type": "string",
            "example": "Curitiba"
          },
          "street": {
            "type": "string",
            "example": "Rua das Flores"
          },
          "number": {
            "type": "string",
            "example": "123"
          },
          "complement": {
            "type": "string",
            "example": "Apto 45"
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Address"
        }
      },
      "AddressInput": {
        "type": "object",
        "properties": {
          "zipCode": {
            "type": "string",
            "example": "12345678"
          },
          "state": {
            "type": "string",
            "example": "PR"
          },
          "city": {
            "type": "string",
            "example": "Curitiba"
          },
          "street": {
            "type": "string",
            "example": "Rua das Flores"
          },
          "number": {
            "type": "string",
            "example": "123"
          },
          "complement": {
            "type": "string",
            "example": "Apto 45"
          }
        },
        "xml": {
          "name": "AddressInput"
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "example": "joao.silva@email.com"
          },
          "cpf": {
            "type": "string",
            "example": "12345678901"
          },
          "phone": {
            "type": "string",
            "example": "11987654321"
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Client"
        }
      },
      "ClientInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Gabriel da Silva Costa"
          },
          "email": {
            "type": "string",
            "example": "silva@gabriel.com"
          },
          "cpf": {
            "type": "string",
            "example": "12345678901"
          },
          "phone": {
            "type": "string",
            "example": "11987654321"
          }
        },
        "xml": {
          "name": "ClientInput"
        }
      },
      "ClientLoginRequest": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string",
            "example": "12345678901"
          },
          "password": {
            "type": "string",
            "example": "senha123"
          }
        },
        "xml": {
          "name": "ClientLoginRequest"
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "email": {
                "type": "string",
                "example": "usuario@example.com"
              },
              "role": {
                "type": "string",
                "example": "client"
              },
              "entityId": {
                "type": "number",
                "example": 2
              },
              "firebaseId": {
                "type": "string",
                "example": "firebase123"
              }
            }
          },
          "entity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 2
              },
              "name": {
                "type": "string",
                "example": "João Silva"
              },
              "cpf": {
                "type": "string",
                "example": "12345678901"
              }
            }
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "xml": {
          "name": "AuthResponse"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "errorCode": {
            "type": "string",
            "example": "BAG_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "example": "Sacola não encontrada com o ID fornecido"
          },
          "timestamp": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "Error"
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "errorCode": {
            "type": "string",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "example": "Erro de validação dos dados de entrada"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "type"
                },
                "message": {
                  "type": "string",
                  "example": "Tipo da sacola deve ser Doce, Salgada ou Mista"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "xml": {
          "name": "ValidationError"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Insira o token JWT com o prefixo Bearer. Exemplo: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\""
      }
    }
  }
}